CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

PROJECT(midsc C)

IF(SDBCDIR)
	SET(SDBC_BASE_DIR ${SDBCDIR})
ELSE()
	SET(SDBC_BASE_DIR "/usr/local/sdbc")
ENDIF()

SET(SDBC_LIB_DIR ${SDBC_BASE_DIR}/lib)
SET(SDBC_INC_DIR ${SDBC_BASE_DIR}/include)

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR} ${SDBC_INC_DIR})

SET(CMAKE_C_FLAGS "-Werror -g -m64")
SET(CMAKE_L_FLAGS "-rdynamic")

FIND_LIBRARY(SDBC_JSON_LIB json ${SDBC_LIB_DIR} NO_DEFAULT_PATH)
FIND_LIBRARY(SDBC_SCBASE_LIB scbase ${SDBC_LIB_DIR} NO_DEFAULT_PATH)
FIND_LIBRARY(SDBC_SC_LIB sc ${SDBC_LIB_DIR} NO_DEFAULT_PATH)
FIND_LIBRARY(RUNTIME_LIB rt /usr/lib NO_DEFAULT_PATH)
FIND_LIBRARY(DLL_LIB dl /usr/lib NO_DEFAULT_PATH)

SET(SRC_LIST login.c midsc.c transfer.c)

LINK_LIBRARIES(${SDBC_JSON_LIB} ${SDBC_SCBASE_LIB} ${SDBC_SC_LIB} ${RUNTIME_LIB} ${DLL_LIB})
LINK_DIRECTORIES(${SDBC_LIB_DIR})
ADD_EXECUTABLE(${PROJECT_NAME} ${SRC_LIST})

TARGET_LINK_LIBRARIES(${PROJECT_NAME} libscbase.a)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} libsc.a)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} libjson.a)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} pthread)
